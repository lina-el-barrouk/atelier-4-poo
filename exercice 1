#include <iostream>
using namespace std;

class Complex {
private:
    float real, imag;
public:
    Complex(float r = 0, float i = 0) : real(r), imag(i) {}
    Complex operator + (const Complex &c) { return Complex(real + c.real, imag + c.imag); }
    Complex operator - (const Complex &c) { return Complex(real - c.real, imag - c.imag); }
    Complex operator * (const Complex &c) { return Complex(real * c.real - imag * c.imag, real * c.imag + imag * c.real); }
    Complex operator / (const Complex &c) {
        float denominator = c.real * c.real + c.imag * c.imag;
        return Complex((real * c.real + imag * c.imag) / denominator, (imag * c.real - real * c.imag) / denominator);
    }
    bool operator == (const Complex &c) { return real == c.real && imag == c.imag; }
    void display() { cout << real << " + " << imag << "i" << endl; }
};
